variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - build
  - test
  - coverage-linux

default:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_gcc:v9.3.0

  cache:
    key: ${CI_PROJECT_PATH}
    paths:
    - .cache/
    - venv/


  before_script:
    - apt update
    - apt install -y python3
    - apt install -y python3-pip
    - python3 --version  # For debugging
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate

build:
  stage: build
  tags:
    - x86_64
    - linux
    - docker

  artifacts:
    name: aff3ct
    paths:
      - aff3ct
      - venv

  script:
    - export CC="gcc"
    - export CXX="g++"
    - pip3 install ../pyaf-core -v

test:
  stage: test

  dependencies:
  - build

  tags:
  - x86_64
  - linux
  - docker

  script:
    - cd ..
    - pip3 show -f aff3ct
    - pytest --pyargs aff3ct --junitxml=./pyaf-core/report.xml

  artifacts:
    when: always
    reports:
      junit: report.xml

coverage-linux:
  stage: coverage-linux
  tags:
    - x86_64
    - linux
    - docker
  coverage: '/.*lines\.*: (\d+.\d+\%)/'
  artifacts:
     name: code-coverage-report
     when: always
     paths:
       - code_coverage_report/
  script:
    - pip3 install pytest-cov
    - pip3 install lcov-cobertura
    - apt install -y lcov
    - export CXX="g++"
    - export CFLAGS="-g -Wall -funroll-loops -fvisibility=hidden -fvisibility-inlines-hidden -coverage -ftest-coverage -fprofile-arcs"
    - export LFLAGS="-coverage -ftest-coverage -fprofile-arcs"
    - pwd
    - ./ci/coverage-linux.sh